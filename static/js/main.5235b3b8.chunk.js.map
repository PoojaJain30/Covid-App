{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","data","state","active","cases","deaths","todayCases","todayDeaths","CardList","stateData","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","usStates","fetch","then","response","json","console","log","this","filterState","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAEaA,G,YAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACK,6BAAKD,EAAME,KAAKC,QAChB,+CAAkBH,EAAME,KAAKE,UAC7B,wCAAWJ,EAAME,KAAKG,SACvB,yCAAYL,EAAME,KAAKI,UACvB,sBAAKL,UAAU,cAAf,UACA,8CAAiBD,EAAME,KAAKK,cAC5B,+CAAkBP,EAAME,KAAKM,uBCNxBC,EAAW,SAACT,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMU,UAAUC,KAAI,SAACT,GAAD,OACjB,cAAC,EAAD,CAAuBA,KAAMA,GAAlBA,EAAKC,aCJXS,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCCG,G,wDApCb,aAAe,IAAD,8BACZ,gBAMFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SANtC,EAAKnB,MAAQ,CACXoB,SAAU,GACVH,YAAa,IAJH,E,gEAYO,IAAD,OAClBI,MAAM,yCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACvB,GAAD,OAAU,EAAKiB,SAAS,CAAEI,SAAUrB,GAAQ0B,QAAQC,IAAI3B,S,+BAGxD,IAAD,EAC2B4B,KAAK3B,MAA/BoB,EADD,EACCA,SAAUH,EADX,EACWA,YACZW,EAAcR,EAASS,QAAO,SAAC9B,GAAD,OAAUA,EAAKC,MAAM8B,cAAcC,SAASd,EAAYa,kBAE5F,OACE,sBAAKhC,UAAU,MAAf,UACE,gDACA,0DACA,cAAC,EAAD,CACEY,YAAY,gBACZC,aAAcgB,KAAKhB,eAErB,cAAC,EAAD,CAAUJ,UAAWqB,W,GA/BXI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5235b3b8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.style.css\";\nexport const Card = (props)=> (\n    <div className=\"card-container\">\n         <h3>{props.data.state}</h3>\n         <p>Active Cases: {props.data.active}</p>\n         <p>Cases: {props.data.cases}</p>\n        <p>Deaths: {props.data.deaths}</p>\n        <div className=\"cases-today\">\n        <p>Today Cases: {props.data.todayCases}</p>\n        <p>Today Deaths: {props.data.todayDeaths}</p>\n        </div>\n    </div>\n   \n);","import React from \"react\";\nimport \"./card-list.style.css\";\nimport { Card } from \"../card/card.component\"\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.stateData.map((data) => (\n        <Card key={data.state} data={data}/>\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport \"./search-box.style.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      usStates: [],\n      searchField: \"\",\n    };\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value }\n    );\n  };\n\n  componentDidMount() {\n    fetch(\"https://disease.sh/v3/covid-19/states\")\n      .then((response) => response.json())\n      .then((data) => this.setState({ usStates: data }, console.log(data)));\n  }\n\n  render() {\n    const { usStates, searchField } = this.state;\n    const filterState = usStates.filter((data) => data.state.toLowerCase().includes(searchField.toLowerCase())) ;\n\n    return (\n      <div className=\"App\">\n        <h2>US Covid Cases</h2>\n        <p>Per state covid case data</p>\n        <SearchBox\n          placeholder=\"search states\"\n          handleChange={this.handleChange}\n        />\n        <CardList stateData={filterState} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}